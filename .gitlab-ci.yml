# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Maven.gitlab-ci.yml

# Build JAVA applications using Apache Maven (http://maven.apache.org)
# For docker image tags see https://hub.docker.com/_/maven/
#
# For general lifecycle information see https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html

# This template will build and test your projects
# * Caches downloaded dependencies and plugins between invocation.
# * Verify but don't deploy merge requests.
# * Deploy built artifacts from master branch only.
stages:
  - build-jar
  - build-docker
  - sast
  - secret_detection
  - container_scanning
  - sonarqube-check
  - deploy
variables:
  SONAR_HOST_URL: https://sonarqube.software.geant.org
  SONARSCANNER: “C:\\SonarScannerMsbuild_exe\\SonarScanner.MSBuild.exe”
  DOCKER_TLS_CERTDIR: ""
  DOCKER_HOST: tcp://docker:2375
  # These are usually specified by the entrypoint, however the
  # Kubernetes executor doesn't run entrypoints
  # https://gitlab.com/gitlab-org/gitlab-runner/-/issues/4125
  
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

# This template uses jdk8 for verifying and deploying images
image: maven:3.3.9-jdk-8
include:
  - template: Jobs/SAST.gitlab-ci.yml
  - template: Jobs/Secret-Detection.gitlab-ci.yml
  - template: Security/Container-Scanning.gitlab-ci.yml
# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
cache:
  paths:
    - .m2/repository
    - target/

# For merge requests do not `deploy` but only run `verify`.
# See https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html
.verify: &verify
  stage: test
  script:
    - 'mvn $MAVEN_CLI_OPTS verify'
  except:
    variables:
      - $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

# Verify merge requests using JDK8

Build_Jar:
  stage: build-jar
  variables:
    KUBERNETES_MEMORY_REQUEST: 3Gi 
    KUBERNETES_MEMORY_LIMIT: 4G
  # Adding these two because of this error: ERROR: Job failed: command terminated with exit code 137
  only:
    refs:
      - main
    changes:
      - pom.xml
      - src/**/*
      - Dockerfile
      - gitlab-ci
  tags:
    - pdt-k8s
  image: maven:3.8-openjdk-11
  script:
    - mvn package -DskipTests=true
  artifacts:
    paths:
    - target/*.jar
sast:
  stage: sast
  

secret_detection:
  stage: secret_detection

 
gitlab-image:
  
  only:
    refs:
      - main
    changes:
      - pom.xml
      - src/**/*
      - Dockerfile
      - gitlab-ci
  tags:
    - pdt-k8s
  environment:
    name: dev
    url: https://${CI_BUILD_REF_SLUG}-dev-devopstrainingschool.com

  image: docker:latest
  stage: build-docker
  services:
    - docker:19.03.12-dind
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    #- echo "$CI_REGISTRY_PASSWORD" | docker login $DOCKER_REGISTRY --username $CI_REGISTRY_USER  $CI_REGISTRY --password-stdin
  needs:
    - Docker
    - Build_Jar
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  script:
    - docker build -t $CI_REGISTRY_IMAGE .
    - docker push $CI_REGISTRY_IMAGE
  dependencies:
    - Build_Jar


Docker:
  
  only:
    refs:
      - main
    changes:
      - pom.xml
      - src/**/*
      - Dockerfile
      - gitlab-ci
  tags:
    - pdt-k8s
  environment:
    name: production
    url: https://${CI_BUILD_REF_SLUG}-prod-devopstrainingschool.com

  image: docker:latest
  stage: build-docker
  services:
    - docker:19.03.12-dind
  before_script:
    - echo "$DOCKER_REGISTRY_PASS" | docker login $DOCKER_REGISTRY --username $DOCKER_REGISTRY_USER --password-stdin
  script:
    - docker build -t yannickeboo/gitlab .
    - docker push  yannickeboo/gitlab
    - docker logout $DOCKER_REGISTRY 
  dependencies:
    - Build_Jar
container_scanning:
  stage: container_scanning
  variables:
    CS_IMAGE: yannickeboo/gitlab:latest
  #needs:
  #  - Docker
sonarqube-check:
  stage: sonarqube-check
  image: maven:3.6.3-jdk-11
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - mvn verify sonar:sonar -Dsonar.qualitygate.wait=true
  allow_failure: true






#chart_deploy:prod:

 # tags:
 #   - pdt-k8s

 # only:
#
 #   refs:
  #    - main
   # changes:
    #  - "**/*"

 # stage: deploy
#
 # image: dtzar/helm-kubectl

  #variables:

   # DESIREDNAMESPACE: yannick-nick

   # RELEASENAME: anael

   # CHARTNAME: anael

  #script:


  #- cd k8s

  #- helm upgrade --install $RELEASENAME $CHARTNAME -n $DESIREDNAMESPACE -f anael/values.yaml
    
