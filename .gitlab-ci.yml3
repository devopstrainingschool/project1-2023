workflow:
  rules:
  - if: $CI_MERGE_REQUEST_IID
    variables:
      IMAGE_TAG: ${CI_COMMIT_SHORT_SHA}-dev
      HELM_CHANNEL: devel
      RUNNER_TAG: mariner
      NAMESPACE: anomaly-detection-test-review
      RELEASE_NAME: anomaly-$CI_BUILD_REF_SLUG
      CI_ENVIRONMENT_URL: https://${CI_BUILD_REF_SLUG}-anomaly-test.mariner-cluster.ornl.gov
      CI_ENVIRONMENT_NAME: review/$CI_BUILD_REF_NAME
      CHARTNAME: anomaly-detection
  - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
    variables:
      IMAGE_TAG: ${CI_COMMIT_SHORT_SHA}-dev
      HELM_CHANNEL: devel
      RUNNER_TAG: mariner
      NAMESPACE: anomaly-detection-test-review
      RELEASE_NAME: anomaly-$CI_BUILD_REF_SLUG
      CI_ENVIRONMENT_URL: https://${CI_BUILD_REF_SLUG}-anomaly-test.mariner-cluster.ornl.gov
      CI_ENVIRONMENT_NAME: review/$CI_BUILD_REF_NAME
      CHARTNAME: anomaly-detection
  - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    variables:
      IMAGE_TAG: ${CI_COMMIT_SHORT_SHA}-prod
      HELM_CHANNEL: stable
      RUNNER_TAG: shellback
      NAMESPACE: iow
      RELEASE_NAME: production
      CI_ENVIRONMENT_URL: https://hydrosource-sjjs--features.ornl.gov 
      CI_ENVIRONMENT_NAME: Production
      CHARTNAME: anomaly-detection
variables:
  CI_TEMPLATE_REGISTRY_HOST: registry.gitlab.com

# Include the upstream version directly from source until code.ornl.gov is upgraded to 15.0+
# 15.0 includes SAST.latestl.gitlab-ci.yml which is compatible is Merge Request Pipelines
# otherwise, the jobs are never added.
# https://gitlab.com/gitlab-org/gitlab/-/merge_requests/81847
include:
- remote: https://gitlab.com/gitlab-org/gitlab/-/raw/master/lib/gitlab/ci/templates/Jobs/SAST.latest.gitlab-ci.yml
- remote: https://gitlab.com/gitlab-org/gitlab/-/raw/master/lib/gitlab/ci/templates/Jobs/Secret-Detection.latest.gitlab-ci.yml
#- remote: https://gitlab.com/gitlab-org/gitlab-foss/-/raw/master/lib/gitlab/ci/templates/Security/Container-Scanning.latest.gitlab-ci.yml
- template: Jobs/Dependency-Scanning.latest.gitlab-ci.yml
- template: Security/Container-Scanning.latest.gitlab-ci.yml

sast:
  tags:
  - ${RUNNER_TAG}
  variables:
    KUBERNETES_MEMORY_REQUEST: 3Gi 
    KUBERNETES_MEMORY_LIMIT: 4G

secret_detection:
  tags:
  - ${RUNNER_TAG}

container_scanning:
  tags:
  - ${RUNNER_TAG}
  variables:
    CS_IMAGE: ${CI_REGISTRY_IMAGE}/anomaly-detection:${IMAGE_TAG}
    CS_DOCKERFILE_PATH: .
    GIT_STRATEGY: fetch
    KUBERNETES_MEMORY_REQUEST: 3Gi 
    KUBERNETES_MEMORY_LIMIT: 4G
    #SECURE_LOG_LEVEL: debug
  needs:
  - Build Image

Build Chart:
  image: camden.ornl.gov/does/toolbox:latest
  tags:
  - ${RUNNER_TAG}
  artifacts:
    reports:
      dotenv: chart-build.env
  script:
  - |
    helm dep update ./k8s/anomaly-detection
    helm lint ./k8s/anomaly-detection
    CHART_VERSION=$(helm show chart ./k8s/anomaly-detection | sed -n 's/^version: \(.*\)$/\1/p')
    echo "Repo chart version is ${CHART_VERSION}"
    if [[ "$CI_COMMIT_BRANCH" != "$CI_DEFAULT_BRANCH" ]]; then
      CHART_VERSION="${CHART_VERSION}-snapshot+${CI_COMMIT_SHORT_SHA}"
      BRANCH_TYPE=devel
    fi
    echo "Augmented chart version is ${CHART_VERSION}"
    echo "CHART_VERSION=${CHART_VERSION}" >> chart-build.env
  - >
    helm cm-push ./k8s/anomaly-detection ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/helm/${HELM_CHANNEL}
    --username gitlab-ci-token
    --password ${CI_JOB_TOKEN}
    --version="${CHART_VERSION}"
    --debug

Build Image:
  image:
    name: gcr.io/kaniko-project/executor:debug
  variables:
    KUBERNETES_MEMORY_REQUEST: 3Gi 
    KUBERNETES_MEMORY_LIMIT: 4G


  tags:
  - ${RUNNER_TAG}
  script:
  - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"username\":\"${CI_REGISTRY_USER}\",\"password\":\"${CI_REGISTRY_PASSWORD}\"}}}" > /kaniko/.docker/config.json
  - >
    /kaniko/executor
    --cache=true
    --cache-copy-layers=true
    --context "$CI_PROJECT_DIR"
    --dockerfile Dockerfile
    --destination "${CI_REGISTRY_IMAGE}/anomaly-detection:${IMAGE_TAG}"

Deploy Environment:
  environment:
    name: ${CI_ENVIRONMENT_NAME}
    url: ${CI_ENVIRONMENT_URL}
    on_stop: Shut Down Review Environment
  image: camden.ornl.gov/does/toolbox:latest
  tags:
  - ${RUNNER_TAG}
  needs:
  - job: "Build Chart"
    artifacts: true
    optional: true
  - job: "Build Image"
    optional: true
  script:
  # Helm requires that keys passed via --set have .[,= escaped with \
  - ESCAPED_CI_REGISTRY=$(echo ${CI_REGISTRY} | sed 's/[\.\[,=]/\\&/g')
  - >
    helm upgrade ${RELEASE_NAME} anomaly-detection
    --install
    --username gitlab-ci-token
    --password ${CI_JOB_TOKEN}
    --repo ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/helm/${HELM_CHANNEL}
    --namespace ${NAMESPACE}
    --version "${CHART_VERSION}"
    --debug
    --atomic
    --set hostname=${CI_ENVIRONMENT_URL#https://}
    --set imagePullSecrets."${ESCAPED_CI_REGISTRY}".username=${CI_DEPLOY_USER}
    --set imagePullSecrets."${ESCAPED_CI_REGISTRY}".password=${CI_DEPLOY_PASSWORD}
    --set image.repository=${CI_REGISTRY_IMAGE}/anomaly-detection
    --set image.tag=${IMAGE_TAG}

Shut Down Review Environment:
  environment:
    name: ${CI_ENVIRONMENT_NAME}
    url: ${CI_ENVIRONMENT_URL}
    action: stop
  image: camden.ornl.gov/does/toolbox:latest
  tags:
  - ${RUNNER_TAG}
  rules:
  - if: $CI_MERGE_REQUEST_IID
    when: manual
  script: helm delete ${RELEASE_NAME} --namespace ${NAMESPACE}

Load test:
  image: camden.ornl.gov/hub_proxy/loadimpact/k6
  tags:
  - mariner
  needs:
  - Deploy Environment
  script:
  - echo $CI_ENVIRONMENT_URL
  - k6 run performance.js --summary-export=load-performance.json --http-debug="full"
  - k6 run k6s-api.js --summary-export=load-performance2.json --http-debug="full"
  artifacts:
    reports:
      load_performance: 
      - load-performance.json
     # - load-performance2.json
    
      
















